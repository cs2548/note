<!DOCTYPE HTML>
<html>
<head>
<title>#ErrorStdOut | AutoHotkey</title>
<meta name="description" content="The #ErrorStdOut directive sends any syntax error that prevents a script from launching to the standard error stream (stderr) rather than displaying a dialog." />
<meta http-equiv="content-type" content="text/html; charset=utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script type="text/javascript">$(function(){0<=window.navigator.userAgent.toLowerCase().indexOf("ucbrowser")&&CaoNiMaDeUc()})</script>
</head>
<body>

<h1>#ErrorStdOut</h1>

<p>把任何阻止脚本运行的语法错误发送到  <strong>stderr</strong>(标准错误) 而不显示一个对话框.</p>

<pre class="Syntax"><span class="func">#ErrorStdOut</span></pre>
<p><span class="ver">[AHK_L 42+]</span>: 错误输出到 stderr(标准错误) 而不是 stdout(标准输出). 命令行和高级编辑器往往会同时显示这些信息. 这种不太规范的情况仅影响 <span class="ver">[v1.1.19.01]</span> 之前的版本.</p>
<p>这个指令可以让类似 TextPad, SciTE, Crimson 和 EditPlus 这些高级编辑器在语法错误发生时跳到有问题的行. 添加 #ErrorStdOut 指令到每个脚本中通常比使用<a href="../Scripts.htm#cmd">命令行开关</a> <strong>/ErrorStdOut</strong> 更方便. (详情请参阅下面的设置说明)</p>
<p>因为 AutoHotkey 不是控制台程序, 错误将不会直接出现在命令行中. 不过, 可以通过管道或重定向捕获这样的输出. 例如:</p>
<pre class="no-highlight">"C:\Program Files\AutoHotkey\AutoHotkey.exe" /ErrorStdOut "My Script.ahk" <strong>2&gt;&amp;1 |more</strong>
"C:\Program Files\AutoHotkey\AutoHotkey.exe" /ErrorStdOut "My Script.ahk" <strong>2&gt;&quot;"Syntax-Error Log.txt"</strong></pre>
<p>您还可以通过管道输出把信息直接传输到剪贴板, 只需下载 <a href="https://www.autohotkey.com/misc/cb.zip">cb.zip</a>(4 KB) 然后参考下面的例子:</p>
<pre class="no-highlight">"C:\Program Files\AutoHotkey\AutoHotkey.exe" /ErrorStdOut "My Script.ahk" <strong>|cb.exe</strong></pre>
<p class="note"><strong>注意</strong>: <code>2&gt;&amp;1</code> 将 stderr 重定向到 stdout, 而 <code>2&gt;<i>Filename</i></code> 只将 stderr 重定向到一个文件.</p>

<h2>特定编辑器的设置说明:</h2>
<p><strong>EditPlus</strong>:<br>
在菜单栏选择 Tools(工具) &gt; Configure User Tools.(配置用户工具)<br>
点击按钮: Add Tool(增加工具) &gt; Program(程序)<br>
Menu Text(菜单名称): 可随意<br>
Command(命令)(修改为您的 AutoHotkey.exe 路径): C:\Program Files\AutoHotkey\AutoHotkey.exe<br>
Argument(参数): /ErrorStdOut &quot;$(FilePath)&quot;<br>
Initial directory(初始文件夹): $(FileDir)<br>
Capture output(捕获输出): Yes</p>
<p><strong>TextPad</strong>:<br>
	在菜单栏选择 Configure &gt; Preferences(配置 &gt; 参数).<br>
	展开 Tools(工具) 菜单.<br>
点击 Add 按钮然后选择 &quot;Program&quot;(程序).<br>
	复制并粘贴(修改为您的 cmd.exe 路径): <em>C:\Windows\System32\cmd.exe</em> -- 然后点击 OK.<br>
	三击列表框中新添加的项(cmd.exe) 并将其重命名为您选择的自定义名称(如 Launch Script).<br>
	点击 Apply(应用). <br>
	从左侧树列表中选择新增的项, 然后填写下列信息:<br>
	Command(应该已经填好): cmd.exe(或者是它的完整路径)<br>
	Parameters(修改为您的 AutoHotkey.exe 路径): /c &quot;&quot;C:\Program Files\AutoHotkey\AutoHotkey.exe&quot; /ErrorStdOut &quot;$File&quot;&quot;<br>
	初始目录: $FileDir<br>
	选择下列框:
	1) Run minimized(最小化运行); 2) Capture output(捕获输出).<br>
	点击 OK 之后新添加的项就应该已经出现在 Tools 菜单中了.</p>
<h2>相关</h2>
<p><a href="FileAppend.htm">FileAppend</a>(因为它也可以发送文本到 stdout)</p>
<h2>示例</h2>
<div class="ex" id="ExBasic">
<p><a href="#ExBasic">#1</a></p>
<pre>#ErrorStdOut</pre>
</div>

</body>
</html>